logger:
  level: {{ neofs_storage__loglevel }}

{% if neofs_storage__pprof_enabled %}
profiler:
  address: {{ neofs_storage__pprof_address }}:{{ neofs_storage__pprof_port }}
{% if neofs_storage__pprof_shutdown_timeout|length > 0 %}
  shutdown_timeout: {{ neofs_storage__pprof_shutdown_timeout }}
{% endif %}
{% endif %}

{% if neofs_storage__prometheus_enabled %}
metrics:
  address: {{ neofs_storage__prometheus_address }}:{{ neofs_storage__prometheus_port }}
{% if neofs_storage__prometheus_shutdown_timeout|length > 0 %}
  shutdown_timeout: {{ neofs_storage__prometheus_shutdown_timeout }}
{% endif %}
{% endif %}

node:
  wallet:
    path: {{ neofs_storage__wallet_path }}
    address: {{ neofs_storage__wallet_addr }}
    password: {{ neofs_storage__wallet_passwd }}
  addresses:
{% for a in neofs_storage__announce_addresses %}
    - {{ a }}
{% endfor %}
{% for attr in neofs_storage__attributes %}
  attribute_{{ loop.index - 1 }}: {{ attr }}:{{ neofs_storage__attributes[attr] }}
{% endfor %}
  relay: {{ neofs_storage__relay }}
{% if neofs_storage__persistent_sessions_enable %}
  persistent_sessions:
    path: {{ neofs_storage__persistent_sessions_path }}
{% endif %}
{% if neofs_storage__persistent_state_enable %}
  persistent_state:
    path: {{ neofs_storage__persistent_state_path }}
{% endif %}
  subnet:
    exit_zero: {{ neofs_storage__subnet_exit_zero }}
{% if neofs_storage__subnet_entries|length %}
    entries:
{% for a in neofs_storage__subnet_entries %}
    - {{ a }}
{% endfor %}
{% else %}
    entries: []
{% endif %}
  notification:
    enabled: {{ neofs_storage__notification_server_enable }}
{% if neofs_storage__notification_server_enable %}
    endpoint: "tls://{{ neofs_storage__notification_server_endpoint }}"
    timeout: "{{ neofs_storage__notification_timeout }}"
    default_topic: "notification"
    certificate: {{ neofs_storage__tls_cert_file }}
    key: {{ neofs_storage__tls_key_file }}
{% endif %}

grpc:
{% for endpoint in neofs_storage__grpc_endpoints %}
  {{ loop.index - 1 }}:
    endpoint: {{ endpoint.address }}:{{ endpoint.port }}
    tls:
      enabled: {{ endpoint.tls }}
{% if endpoint.tls %}
      certificate: {{ neofs_storage__tls_cert_file }}
      key: {{ neofs_storage__tls_key_file }}
{% endif %}
{% endfor %}

{% if neofs_storage__control_enabled %}
control:
  authorized_keys:
{% for authorized_key in neofs_storage__control_authorized_keys %}
    - {{ authorized_key }}
{% endfor %}
  grpc:
    endpoint: {{ neofs_storage__control_endpoint_host }}:{{ neofs_storage__control_endpoint_port }}
{% endif %}

{% if neofs_storage__contracts|length > 0 %}
contracts:
{% for contract in neofs_storage__contracts %}
  {{ contract }}: {{ neofs_storage__contracts[contract] }}
{% endfor %}
{% endif %}

morph:
{% if neofs_storage__morph_dial_timeout|length > 0 %}
  dial_timeout: {{ neofs_storage__morph_dial_timeout }}
{% endif %}
{% if neofs_storage__morph_disable_cache|length > 0 %}
  disable_cache: {{ neofs_storage__morph_disable_cache }}
{% endif %}
  rpc_endpoint:
{% for endpoint in neofs_storage__morph_rpc %}
    - {{ endpoint }}
{% endfor %}

{% if neofs_storage__apiclient_dial_timeout|length > 0 %}
apiclient:
  dial_timeout: "{{ neofs_storage__apiclient_dial_timeout }}"
{% endif %}

{% if neofs_storage__policer_head_timeout|length > 0 %}
policer:
  head_timeout: "{{ neofs_storage__policer_head_timeout }}"
{% endif %}

{% if neofs_storage__replicator_put_timeout|length > 0 %}
replicator:
  put_timeout: "{{ neofs_storage__replicator_put_timeout }}"
{% endif %}

object:
  put:
    pool_size_remote: {{ neofs_storage__put_pool_remote }}
    pool_size_local: {{ neofs_storage__put_pool_local }}

storage:
  shard_pool_size: {{ neofs_storage__shard_pool }}
  shard:
{% for shard in neofs_storage__shards %}
    {{ loop.index - 1 }}:
{% if shard['mode']|length > 0 %}
    mode: {{ shard['mode'] }}
{% endif %}
{% if shard['resync_metabase']|length > 0 %}
    resync_metabase: {{ shard['resync_metabase'] }}
{% endif %}
{% if shard['write_cache']['enabled'] %}
      writecache:
        enabled: true
        path: {{ shard['write_cache']['path'] }}
        memcache_capacity: {{ shard['write_cache']['memcache_capacity'] }}
        small_object_size: {{ shard['write_cache']['small_object_size'] }}
        max_object_size: {{ shard['write_cache']['max_object_size'] }}
        workers_number: {{ shard['write_cache']['workers_number'] }}
        capacity: {{ shard['write_cache']['capacity'] }}
{% endif %}
      metabase:
        path: {{ shard['metabase']['path'] }}
{% if shard['metabase']['perm']|length > 0 %}
        perm: {{ shard['metabase']['perm'] }}
{% endif %}
{% if shard['metabase']['max_batch_size']|length > 0 %}
	max_batch_size: {{ shard['metabase']['max_batch_size'] }}
{% endif %}
{% if shard['metabase']['max_batch_delay']|length > 0 %}
        max_batch_delay: {{ shard['metabase']['max_batch_delay'] }}
{% endif %}
      blobstor:
        path: {{ shard['blobstor']['path'] }}
        perm: {{ shard['blobstor']['perm'] }}
        compress: {{ shard['blobstor']['compress'] }}
	compression_exclude_content_types:
{% for content_type in shard['blobstor']['compression_exclude_content_types'] %}
          - {{ content_type }}
{% endfor %}
        depth: {{ shard['blobstor']['depth'] }}
        small_object_size: {{ shard['blobstor']['small_object_size'] }}
        blobovnicza:
          size: {{ shard['blobovnicza']['size'] }}
          depth: {{ shard['blobovnicza']['depth'] }}
          width: {{ shard['blobovnicza']['width'] }}
          opened_cache_capacity: {{ shard['blobovnicza']['opened_cache_capacity'] }}
      pilorama:
        path: {{ shard['pilorama']['path'] }}
        max_batch_delay: {{ shard['pilorama']['max_batch_delay'] }}
        max_batch_size: {{ shard['pilorama']['max_batch_size'] }}
        no_sync: {{ shard['pilorama']['no_sync'] }}
      gc:
        remover_batch_size: {{ shard['gc']['remover_batch_size'] }}
        remover_sleep_interval: {{ shard['gc']['remover_sleep_interval'] }}
{% endfor %}
